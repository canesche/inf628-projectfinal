; ModuleID = 'work_dir/out.ll'
source_filename = "../benchmarks/quicksort.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%0 = type { %0*, %0*, i32 }
%1 = type { i32, i32 }
%2 = type { float, float }

@value = global float 0.000000e+00, align 4
@fixed = global float 0.000000e+00, align 4
@floated = global float 0.000000e+00, align 4
@seed = global i64 0, align 8
@permarray = global [11 x i32] zeroinitializer, align 16
@pctr = global i32 0, align 4
@tree = global %0* null, align 8
@stack = global [4 x i32] zeroinitializer, align 16
@cellspace = global [19 x %1] zeroinitializer, align 16
@freelist = global i32 0, align 4
@movesdone = global i32 0, align 4
@ima = global [41 x [41 x i32]] zeroinitializer, align 16
@imb = global [41 x [41 x i32]] zeroinitializer, align 16
@imr = global [41 x [41 x i32]] zeroinitializer, align 16
@rma = global [41 x [41 x float]] zeroinitializer, align 16
@rmb = global [41 x [41 x float]] zeroinitializer, align 16
@rmr = global [41 x [41 x float]] zeroinitializer, align 16
@puzzl = global [512 x i32] zeroinitializer, align 16
@p = global [13 x [512 x i32]] zeroinitializer, align 16
@n = global i32 0, align 4
@kount = global i32 0, align 4
@sortlist = global [5001 x i32] zeroinitializer, align 16
@biggest = global i32 0, align 4
@littlest = global i32 0, align 4
@top = global i32 0, align 4
@z = global [257 x %2] zeroinitializer, align 16
@w = global [257 x %2] zeroinitializer, align 16
@e = global [130 x %2] zeroinitializer, align 16
@zr = global float 0.000000e+00, align 4
@zi = global float 0.000000e+00, align 4
@0 = private unnamed_addr constant [18 x i8] c" Error in Quick.\0A\00", align 1
@1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define void @_Z8Initrandv() #0 {
  br label %codeRepl

codeRepl:                                         ; preds = %0
  call void @_Z8Initrandv_.split()
  br label %.split.ret

.split.ret:                                       ; preds = %codeRepl
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @_Z4Randv() #0 {
  %.loc = alloca i32
  br label %codeRepl

codeRepl:                                         ; preds = %0
  call void @_Z4Randv_.split(i32* %.loc)
  %.reload = load i32, i32* %.loc
  br label %.split.ret

.split.ret:                                       ; preds = %codeRepl
  ret i32 %.reload
}

; Function Attrs: noinline nounwind optnone uwtable
define void @_Z7Initarrv() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  call void @_Z8Initrandv()
  store i32 0, i32* @biggest, align 4
  store i32 0, i32* @littlest, align 4
  store i32 1, i32* %1, align 4
  br label %codeRepl

codeRepl:                                         ; preds = %codeRepl9, %0
  %targetBlock = call i1 @_Z7Initarrv_(i32* %1)
  br i1 %targetBlock, label %codeRepl1, label %codeRepl10

codeRepl1:                                        ; preds = %codeRepl
  %targetBlock2 = call i1 @_Z7Initarrv_.1(i64* %2, i32* %1)
  br i1 %targetBlock2, label %codeRepl3, label %codeRepl4

codeRepl3:                                        ; preds = %codeRepl1
  call void @_Z7Initarrv_.2(i32* %1)
  br label %codeRepl8

codeRepl4:                                        ; preds = %codeRepl1
  %targetBlock5 = call i1 @_Z7Initarrv_.3(i32* %1)
  br i1 %targetBlock5, label %codeRepl6, label %codeRepl4.codeRepl7_crit_edge

codeRepl4.codeRepl7_crit_edge:                    ; preds = %codeRepl4
  br label %codeRepl7

codeRepl6:                                        ; preds = %codeRepl4
  call void @_Z7Initarrv_.4(i32* %1)
  br label %codeRepl7

codeRepl7:                                        ; preds = %codeRepl4.codeRepl7_crit_edge, %codeRepl6
  call void @_Z7Initarrv_.5()
  br label %codeRepl8

codeRepl8:                                        ; preds = %codeRepl3, %codeRepl7
  call void @_Z7Initarrv_.6()
  br label %codeRepl9

codeRepl9:                                        ; preds = %codeRepl8
  call void @_Z7Initarrv_.7(i32* %1)
  br label %codeRepl

codeRepl10:                                       ; preds = %codeRepl
  call void @_Z7Initarrv_.8()
  br label %.ret

.ret:                                             ; preds = %codeRepl10
  ret void
}

; Function Attrs: noinline optnone uwtable
define void @_Z9QuicksortPiii(i32*, i32, i32) #1 {
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %11 = load i32, i32* %5, align 4
  store i32 %11, i32* %7, align 4
  %12 = load i32, i32* %6, align 4
  store i32 %12, i32* %8, align 4
  %13 = load i32*, i32** %4, align 8
  %14 = load i32, i32* %5, align 4
  %15 = load i32, i32* %6, align 4
  %16 = add nsw i32 %14, %15
  %17 = sdiv i32 %16, 2
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i32, i32* %13, i64 %18
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %9, align 4
  br label %codeRepl

codeRepl:                                         ; preds = %codeRepl11.codeRepl_crit_edge, %3
  call void @_Z9QuicksortPiii_()
  br label %codeRepl1

codeRepl1:                                        ; preds = %codeRepl2, %codeRepl
  %targetBlock = call i1 @_Z9QuicksortPiii_.9(i32** %4, i32* %7, i32* %9)
  br i1 %targetBlock, label %codeRepl2, label %codeRepl3

codeRepl2:                                        ; preds = %codeRepl1
  call void @_Z9QuicksortPiii_.10(i32* %7)
  br label %codeRepl1

codeRepl3:                                        ; preds = %codeRepl1
  call void @_Z9QuicksortPiii_.11()
  br label %codeRepl4

codeRepl4:                                        ; preds = %codeRepl6, %codeRepl3
  %targetBlock5 = call i1 @_Z9QuicksortPiii_.12(i32* %9, i32** %4, i32* %8)
  br i1 %targetBlock5, label %codeRepl6, label %codeRepl7

codeRepl6:                                        ; preds = %codeRepl4
  call void @_Z9QuicksortPiii_.13(i32* %8)
  br label %codeRepl4

codeRepl7:                                        ; preds = %codeRepl4
  %targetBlock8 = call i1 @_Z9QuicksortPiii_.14(i32* %7, i32* %8)
  br i1 %targetBlock8, label %codeRepl9, label %codeRepl7.codeRepl10_crit_edge

codeRepl7.codeRepl10_crit_edge:                   ; preds = %codeRepl7
  br label %codeRepl10

codeRepl9:                                        ; preds = %codeRepl7
  call void @_Z9QuicksortPiii_.15(i32** %4, i32* %7, i32* %10, i32* %8)
  br label %codeRepl10

codeRepl10:                                       ; preds = %codeRepl7.codeRepl10_crit_edge, %codeRepl9
  call void @_Z9QuicksortPiii_.16()
  br label %codeRepl11

codeRepl11:                                       ; preds = %codeRepl10
  %targetBlock12 = call i1 @_Z9QuicksortPiii_.17(i32* %7, i32* %8)
  br i1 %targetBlock12, label %codeRepl11.codeRepl_crit_edge, label %codeRepl13

codeRepl11.codeRepl_crit_edge:                    ; preds = %codeRepl11
  br label %codeRepl

codeRepl13:                                       ; preds = %codeRepl11
  %targetBlock14 = call i1 @_Z9QuicksortPiii_.18(i32* %5, i32* %8)
  br i1 %targetBlock14, label %codeRepl15, label %codeRepl13.codeRepl16_crit_edge

codeRepl13.codeRepl16_crit_edge:                  ; preds = %codeRepl13
  br label %codeRepl16

codeRepl15:                                       ; preds = %codeRepl13
  call void @_Z9QuicksortPiii_.19(i32** %4, i32* %5, i32* %8)
  br label %codeRepl16

codeRepl16:                                       ; preds = %codeRepl13.codeRepl16_crit_edge, %codeRepl15
  %targetBlock17 = call i1 @_Z9QuicksortPiii_.20(i32* %7, i32* %6)
  br i1 %targetBlock17, label %codeRepl18, label %codeRepl16.codeRepl19_crit_edge

codeRepl16.codeRepl19_crit_edge:                  ; preds = %codeRepl16
  br label %codeRepl19

codeRepl18:                                       ; preds = %codeRepl16
  call void @_Z9QuicksortPiii_.21(i32** %4, i32* %7, i32* %6)
  br label %codeRepl19

codeRepl19:                                       ; preds = %codeRepl16.codeRepl19_crit_edge, %codeRepl18
  call void @_Z9QuicksortPiii_.22()
  br label %.ret

.ret:                                             ; preds = %codeRepl19
  ret void
}

; Function Attrs: noinline optnone uwtable
define void @_Z5Quicki(i32) #1 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @_Z7Initarrv()
  call void @_Z9QuicksortPiii(i32* getelementptr inbounds ([5001 x i32], [5001 x i32]* @sortlist, i32 0, i32 0), i32 1, i32 5000)
  %3 = load i32, i32* getelementptr inbounds ([5001 x i32], [5001 x i32]* @sortlist, i64 0, i64 1), align 4
  %4 = load i32, i32* @littlest, align 4
  %5 = icmp ne i32 %3, %4
  br i1 %5, label %.codeRepl1_crit_edge, label %codeRepl

.codeRepl1_crit_edge:                             ; preds = %1
  br label %codeRepl1

codeRepl:                                         ; preds = %1
  %targetBlock = call i1 @_Z5Quicki_()
  br i1 %targetBlock, label %codeRepl.codeRepl1_crit_edge, label %codeRepl.codeRepl2_crit_edge

codeRepl.codeRepl2_crit_edge:                     ; preds = %codeRepl
  br label %codeRepl2

codeRepl.codeRepl1_crit_edge:                     ; preds = %codeRepl
  br label %codeRepl1

codeRepl1:                                        ; preds = %codeRepl.codeRepl1_crit_edge, %.codeRepl1_crit_edge
  call void @_Z5Quicki_.23()
  br label %codeRepl2

codeRepl2:                                        ; preds = %codeRepl.codeRepl2_crit_edge, %codeRepl1
  call void @_Z5Quicki_.24(i32* %2)
  br label %.ret

.ret:                                             ; preds = %codeRepl2
  ret void
}

declare i32 @printf(i8*, ...) #2

; Function Attrs: noinline norecurse optnone uwtable
define i32 @main() #3 {
  %1 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  call void @_Z5Quicki(i32 0)
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal void @_Z8Initrandv_.split() #4 {
newFuncRoot:
  br label %.split

.split.ret.exitStub:                              ; preds = %.split
  ret void

.split:                                           ; preds = %newFuncRoot
  store i64 74755, i64* @seed, align 8
  br label %.split.ret.exitStub
}

; Function Attrs: nounwind uwtable
define internal void @_Z4Randv_.split(i32* %.out) #4 {
newFuncRoot:
  br label %.split

.split.ret.exitStub:                              ; preds = %.split
  store i32 %5, i32* %.out
  ret void

.split:                                           ; preds = %newFuncRoot
  %0 = load i64, i64* @seed, align 8
  %1 = mul nsw i64 %0, 1309
  %2 = add nsw i64 %1, 13849
  %3 = and i64 %2, 65535
  store i64 %3, i64* @seed, align 8
  %4 = load i64, i64* @seed, align 8
  %5 = trunc i64 %4 to i32
  br label %.split.ret.exitStub
}

; Function Attrs: nounwind uwtable
define internal i1 @_Z7Initarrv_(i32*) #4 {
newFuncRoot:
  br label %1

.exitStub:                                        ; preds = %1
  ret i1 true

.exitStub1:                                       ; preds = %1
  ret i1 false

; <label>:1:                                      ; preds = %newFuncRoot
  %2 = load i32, i32* %0, align 4
  %3 = icmp sle i32 %2, 5000
  br i1 %3, label %.exitStub, label %.exitStub1
}

; Function Attrs: nounwind uwtable
define internal i1 @_Z7Initarrv_.1(i64*, i32*) #4 {
newFuncRoot:
  br label %2

.exitStub:                                        ; preds = %2
  ret i1 true

.exitStub1:                                       ; preds = %2
  ret i1 false

; <label>:2:                                      ; preds = %newFuncRoot
  %3 = call i32 @_Z4Randv()
  %4 = sext i32 %3 to i64
  store i64 %4, i64* %0, align 8
  %5 = load i64, i64* %0, align 8
  %6 = load i64, i64* %0, align 8
  %7 = sdiv i64 %6, 100000
  %8 = mul nsw i64 %7, 100000
  %9 = sub nsw i64 %5, %8
  %10 = sub nsw i64 %9, 50000
  %11 = trunc i64 %10 to i32
  %12 = load i32, i32* %1, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [5001 x i32], [5001 x i32]* @sortlist, i64 0, i64 %13
  store i32 %11, i32* %14, align 4
  %15 = load i32, i32* %1, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [5001 x i32], [5001 x i32]* @sortlist, i64 0, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = load i32, i32* @biggest, align 4
  %20 = icmp sgt i32 %18, %19
  br i1 %20, label %.exitStub, label %.exitStub1
}

; Function Attrs: nounwind uwtable
define internal void @_Z7Initarrv_.2(i32*) #4 {
newFuncRoot:
  br label %1

.exitStub:                                        ; preds = %1
  ret void

; <label>:1:                                      ; preds = %newFuncRoot
  %2 = load i32, i32* %0, align 4
  %3 = sext i32 %2 to i64
  %4 = getelementptr inbounds [5001 x i32], [5001 x i32]* @sortlist, i64 0, i64 %3
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* @biggest, align 4
  br label %.exitStub
}

; Function Attrs: nounwind uwtable
define internal i1 @_Z7Initarrv_.3(i32*) #4 {
newFuncRoot:
  br label %1

.exitStub:                                        ; preds = %1
  ret i1 true

.exitStub1:                                       ; preds = %1
  ret i1 false

; <label>:1:                                      ; preds = %newFuncRoot
  %2 = load i32, i32* %0, align 4
  %3 = sext i32 %2 to i64
  %4 = getelementptr inbounds [5001 x i32], [5001 x i32]* @sortlist, i64 0, i64 %3
  %5 = load i32, i32* %4, align 4
  %6 = load i32, i32* @littlest, align 4
  %7 = icmp slt i32 %5, %6
  br i1 %7, label %.exitStub, label %.exitStub1
}

; Function Attrs: nounwind uwtable
define internal void @_Z7Initarrv_.4(i32*) #4 {
newFuncRoot:
  br label %1

.exitStub:                                        ; preds = %1
  ret void

; <label>:1:                                      ; preds = %newFuncRoot
  %2 = load i32, i32* %0, align 4
  %3 = sext i32 %2 to i64
  %4 = getelementptr inbounds [5001 x i32], [5001 x i32]* @sortlist, i64 0, i64 %3
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* @littlest, align 4
  br label %.exitStub
}

; Function Attrs: nounwind uwtable
define internal void @_Z7Initarrv_.5() #4 {
newFuncRoot:
  br label %0

.exitStub:                                        ; preds = %0
  ret void

; <label>:0:                                      ; preds = %newFuncRoot
  br label %.exitStub
}

; Function Attrs: nounwind uwtable
define internal void @_Z7Initarrv_.6() #4 {
newFuncRoot:
  br label %0

.exitStub:                                        ; preds = %0
  ret void

; <label>:0:                                      ; preds = %newFuncRoot
  br label %.exitStub
}

; Function Attrs: nounwind uwtable
define internal void @_Z7Initarrv_.7(i32*) #4 {
newFuncRoot:
  br label %1

codeRepl.exitStub:                                ; preds = %1
  ret void

; <label>:1:                                      ; preds = %newFuncRoot
  %2 = load i32, i32* %0, align 4
  %3 = add nsw i32 %2, 1
  store i32 %3, i32* %0, align 4
  br label %codeRepl.exitStub
}

; Function Attrs: nounwind uwtable
define internal void @_Z7Initarrv_.8() #4 {
newFuncRoot:
  br label %0

.ret.exitStub:                                    ; preds = %0
  ret void

; <label>:0:                                      ; preds = %newFuncRoot
  br label %.ret.exitStub
}

; Function Attrs: uwtable
define internal void @_Z9QuicksortPiii_() #5 {
newFuncRoot:
  br label %0

.exitStub:                                        ; preds = %0
  ret void

; <label>:0:                                      ; preds = %newFuncRoot
  br label %.exitStub
}

; Function Attrs: uwtable
define internal i1 @_Z9QuicksortPiii_.9(i32**, i32*, i32*) #5 {
newFuncRoot:
  br label %3

.exitStub:                                        ; preds = %3
  ret i1 true

.exitStub1:                                       ; preds = %3
  ret i1 false

; <label>:3:                                      ; preds = %newFuncRoot
  %4 = load i32*, i32** %0, align 8
  %5 = load i32, i32* %1, align 4
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i32, i32* %4, i64 %6
  %8 = load i32, i32* %7, align 4
  %9 = load i32, i32* %2, align 4
  %10 = icmp slt i32 %8, %9
  br i1 %10, label %.exitStub, label %.exitStub1
}

; Function Attrs: uwtable
define internal void @_Z9QuicksortPiii_.10(i32*) #5 {
newFuncRoot:
  br label %1

codeRepl1.exitStub:                               ; preds = %1
  ret void

; <label>:1:                                      ; preds = %newFuncRoot
  %2 = load i32, i32* %0, align 4
  %3 = add nsw i32 %2, 1
  store i32 %3, i32* %0, align 4
  br label %codeRepl1.exitStub
}

; Function Attrs: uwtable
define internal void @_Z9QuicksortPiii_.11() #5 {
newFuncRoot:
  br label %0

.exitStub:                                        ; preds = %0
  ret void

; <label>:0:                                      ; preds = %newFuncRoot
  br label %.exitStub
}

; Function Attrs: uwtable
define internal i1 @_Z9QuicksortPiii_.12(i32*, i32**, i32*) #5 {
newFuncRoot:
  br label %3

.exitStub:                                        ; preds = %3
  ret i1 true

.exitStub1:                                       ; preds = %3
  ret i1 false

; <label>:3:                                      ; preds = %newFuncRoot
  %4 = load i32, i32* %0, align 4
  %5 = load i32*, i32** %1, align 8
  %6 = load i32, i32* %2, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds i32, i32* %5, i64 %7
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %4, %9
  br i1 %10, label %.exitStub, label %.exitStub1
}

; Function Attrs: uwtable
define internal void @_Z9QuicksortPiii_.13(i32*) #5 {
newFuncRoot:
  br label %1

codeRepl4.exitStub:                               ; preds = %1
  ret void

; <label>:1:                                      ; preds = %newFuncRoot
  %2 = load i32, i32* %0, align 4
  %3 = sub nsw i32 %2, 1
  store i32 %3, i32* %0, align 4
  br label %codeRepl4.exitStub
}

; Function Attrs: uwtable
define internal i1 @_Z9QuicksortPiii_.14(i32*, i32*) #5 {
newFuncRoot:
  br label %2

.exitStub:                                        ; preds = %2
  ret i1 true

.exitStub1:                                       ; preds = %2
  ret i1 false

; <label>:2:                                      ; preds = %newFuncRoot
  %3 = load i32, i32* %0, align 4
  %4 = load i32, i32* %1, align 4
  %5 = icmp sle i32 %3, %4
  br i1 %5, label %.exitStub, label %.exitStub1
}

; Function Attrs: uwtable
define internal void @_Z9QuicksortPiii_.15(i32**, i32*, i32*, i32*) #5 {
newFuncRoot:
  br label %4

.exitStub:                                        ; preds = %4
  ret void

; <label>:4:                                      ; preds = %newFuncRoot
  %5 = load i32*, i32** %0, align 8
  %6 = load i32, i32* %1, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds i32, i32* %5, i64 %7
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %2, align 4
  %10 = load i32*, i32** %0, align 8
  %11 = load i32, i32* %3, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i32, i32* %10, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = load i32*, i32** %0, align 8
  %16 = load i32, i32* %1, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i32, i32* %15, i64 %17
  store i32 %14, i32* %18, align 4
  %19 = load i32, i32* %2, align 4
  %20 = load i32*, i32** %0, align 8
  %21 = load i32, i32* %3, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i32, i32* %20, i64 %22
  store i32 %19, i32* %23, align 4
  %24 = load i32, i32* %1, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %1, align 4
  %26 = load i32, i32* %3, align 4
  %27 = sub nsw i32 %26, 1
  store i32 %27, i32* %3, align 4
  br label %.exitStub
}

; Function Attrs: uwtable
define internal void @_Z9QuicksortPiii_.16() #5 {
newFuncRoot:
  br label %0

.exitStub:                                        ; preds = %0
  ret void

; <label>:0:                                      ; preds = %newFuncRoot
  br label %.exitStub
}

; Function Attrs: uwtable
define internal i1 @_Z9QuicksortPiii_.17(i32*, i32*) #5 {
newFuncRoot:
  br label %2

codeRepl.exitStub:                                ; preds = %2
  ret i1 true

.exitStub:                                        ; preds = %2
  ret i1 false

; <label>:2:                                      ; preds = %newFuncRoot
  %3 = load i32, i32* %0, align 4
  %4 = load i32, i32* %1, align 4
  %5 = icmp sle i32 %3, %4
  br i1 %5, label %codeRepl.exitStub, label %.exitStub
}

; Function Attrs: uwtable
define internal i1 @_Z9QuicksortPiii_.18(i32*, i32*) #5 {
newFuncRoot:
  br label %2

.exitStub:                                        ; preds = %2
  ret i1 true

.exitStub1:                                       ; preds = %2
  ret i1 false

; <label>:2:                                      ; preds = %newFuncRoot
  %3 = load i32, i32* %0, align 4
  %4 = load i32, i32* %1, align 4
  %5 = icmp slt i32 %3, %4
  br i1 %5, label %.exitStub, label %.exitStub1
}

; Function Attrs: uwtable
define internal void @_Z9QuicksortPiii_.19(i32**, i32*, i32*) #5 {
newFuncRoot:
  br label %3

.exitStub:                                        ; preds = %3
  ret void

; <label>:3:                                      ; preds = %newFuncRoot
  %4 = load i32*, i32** %0, align 8
  %5 = load i32, i32* %1, align 4
  %6 = load i32, i32* %2, align 4
  call void @_Z9QuicksortPiii(i32* %4, i32 %5, i32 %6)
  br label %.exitStub
}

; Function Attrs: uwtable
define internal i1 @_Z9QuicksortPiii_.20(i32*, i32*) #5 {
newFuncRoot:
  br label %2

.exitStub:                                        ; preds = %2
  ret i1 true

.exitStub1:                                       ; preds = %2
  ret i1 false

; <label>:2:                                      ; preds = %newFuncRoot
  %3 = load i32, i32* %0, align 4
  %4 = load i32, i32* %1, align 4
  %5 = icmp slt i32 %3, %4
  br i1 %5, label %.exitStub, label %.exitStub1
}

; Function Attrs: uwtable
define internal void @_Z9QuicksortPiii_.21(i32**, i32*, i32*) #5 {
newFuncRoot:
  br label %3

.exitStub:                                        ; preds = %3
  ret void

; <label>:3:                                      ; preds = %newFuncRoot
  %4 = load i32*, i32** %0, align 8
  %5 = load i32, i32* %1, align 4
  %6 = load i32, i32* %2, align 4
  call void @_Z9QuicksortPiii(i32* %4, i32 %5, i32 %6)
  br label %.exitStub
}

; Function Attrs: uwtable
define internal void @_Z9QuicksortPiii_.22() #5 {
newFuncRoot:
  br label %0

.ret.exitStub:                                    ; preds = %0
  ret void

; <label>:0:                                      ; preds = %newFuncRoot
  br label %.ret.exitStub
}

; Function Attrs: uwtable
define internal i1 @_Z5Quicki_() #5 {
newFuncRoot:
  br label %0

.exitStub:                                        ; preds = %0
  ret i1 true

.exitStub1:                                       ; preds = %0
  ret i1 false

; <label>:0:                                      ; preds = %newFuncRoot
  %1 = load i32, i32* getelementptr inbounds ([5001 x i32], [5001 x i32]* @sortlist, i64 0, i64 5000), align 16
  %2 = load i32, i32* @biggest, align 4
  %3 = icmp ne i32 %1, %2
  br i1 %3, label %.exitStub, label %.exitStub1
}

; Function Attrs: uwtable
define internal void @_Z5Quicki_.23() #5 {
newFuncRoot:
  br label %0

.exitStub:                                        ; preds = %0
  ret void

; <label>:0:                                      ; preds = %newFuncRoot
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @0, i32 0, i32 0))
  br label %.exitStub
}

; Function Attrs: uwtable
define internal void @_Z5Quicki_.24(i32*) #5 {
newFuncRoot:
  br label %1

.ret.exitStub:                                    ; preds = %1
  ret void

; <label>:1:                                      ; preds = %newFuncRoot
  %2 = load i32, i32* %0, align 4
  %3 = add nsw i32 %2, 1
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds [5001 x i32], [5001 x i32]* @sortlist, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1, i32 0, i32 0), i32 %6)
  br label %.ret.exitStub
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline norecurse optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 5.0.2 (tags/RELEASE_502/final)"}
